// <auto-generated />
using Gulbee.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gulbee.Api.Data.Migrations
{
    [DbContext(typeof(GulbeeContext))]
    [Migration("20240909165400_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Gulbee.Api.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Owoc"
                        });
                });

            modelBuilder.Entity("Gulbee.Api.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Carbo")
                        .HasColumnType("REAL");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Fat")
                        .HasColumnType("REAL");

                    b.Property<int>("Kcal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Proteins")
                        .HasColumnType("REAL");

                    b.Property<double>("Salt")
                        .HasColumnType("REAL");

                    b.Property<double>("Sugar")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Carbo = 10.0,
                            CategoryId = 1,
                            Fat = 3.0,
                            Kcal = 40,
                            Name = "Banan",
                            Proteins = 5.0,
                            Salt = 0.0,
                            Sugar = 2.0
                        },
                        new
                        {
                            Id = 2,
                            Carbo = 10.0,
                            CategoryId = 1,
                            Fat = 3.0,
                            Kcal = 40,
                            Name = "Jabłko",
                            Proteins = 5.0,
                            Salt = 0.0,
                            Sugar = 2.0
                        },
                        new
                        {
                            Id = 3,
                            Carbo = 10.0,
                            CategoryId = 1,
                            Fat = 3.0,
                            Kcal = 40,
                            Name = "Truskawka",
                            Proteins = 5.0,
                            Salt = 0.0,
                            Sugar = 2.0
                        });
                });

            modelBuilder.Entity("Gulbee.Api.Entities.Product", b =>
                {
                    b.HasOne("Gulbee.Api.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
